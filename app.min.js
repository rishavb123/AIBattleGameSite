const c=document.getElementById("application"),ctx=c.getContext("2d");let match,regex=/[?&]([^=#]+)=([^&#]*)/g,url=window.location.href,params={};for(;match=regex.exec(url);)params[match[1]]=match[2];window.innerWidth>window.innerHeight?(c.width=window.innerHeight,c.height=window.innerHeight):(c.width=window.innerWidth,c.height=window.innerWidth),window.addEventListener("resize",()=>{window.innerWidth>window.innerHeight?(c.width=window.innerHeight,c.height=window.innerHeight):(c.width=window.innerWidth,c.height=window.innerWidth)});class GameObject{collide(){}update(){this.x+=this.dx,this.y+=this.dy,this.draw()}outOfBounds(){return this.x>100||this.y>100||this.x+this.w<0||this.y+this.h<0}draw(e=!0){e&&(ctx.fillStyle=this.color,ctx.fillRect(this.x/100*c.width,this.y/100*c.height,this.w/100*c.width,this.h/100*c.height))}remove(){remove(this)}}class Player extends GameObject{constructor(e,t,a,n,i){super(),this.x=e,this.y=t,this.w=a,this.h=n,this.dx=0,this.dy=0,this.bullets=[],this.action=-1,this.health=100,this.rgb_color=i,this.color=`rgba(${i.red}, ${i.blue}, ${i.green}, 1)`,this.alpha=1}collide(e){e instanceof Bullet&&e.sender!==this&&(e.remove(),this.health-=10),e instanceof Enemy&&(hitFeatures.unshift(e.get_features()),hitFeatures.length>7&&hitFeatures.pop(),e.remove(),this.health-=25)}update(e=!0){this.color=`rgba(${this.rgb_color.red}, ${this.rgb_color.green}, ${this.rgb_color.blue}, ${this.health/100})`,super.update(e),this.outOfBounds()&&this.health--}shoot(){if(this.bullets.length<5){let e=new Bullet(this.x+this.w/4,this.y+this.h/4,this.w/2,this.h/2,0==this.dx&&0==this.dy?3:3*this.dx,3*this.dy,this);this.bullets.push(e),add(e)}}getBullet(e){return this.bullets[e]||Bullet.defaultBullet}set_action(e){switch(this.action=e,e){case LEFT:this.dx=-1,this.dy=0;break;case UP:this.dy=-1,this.dx=0;break;case RIGHT:this.dx=1,this.dy=0;break;case DOWN:this.dy=1,this.dx=0}}}class Bullet extends GameObject{constructor(e,t,a,n,i,s,o){super(),this.x=e,this.y=t,this.dx=i,this.dy=s,this.w=a,this.h=n,this.sender=o,this.color="white"}update(e=!0){super.update(e),this.outOfBounds()&&this.remove()}remove(){this.sender.bullets.splice(this.sender.bullets.indexOf(this),1),remove(this)}}class Enemy extends GameObject{constructor(e,t,a,n,i,s,o){super(),Math.random()>.9&&(a+=10*randGauss()),Math.random()>.9&&(n+=10*randGauss()),Math.random()>.9&&(i+=.5*randGauss()),Math.random()>.9&&(s+=.5*randGauss()),Math.random()>.9&&(o+=.5*randGauss()),a>Enemy.maxWidth&&(a=Enemy.maxWidth),a<Enemy.minWidth&&(a=Enemy.minWidth),n>Enemy.maxHeight&&(n=Enemy.maxHeight),n<Enemy.minHeight&&(n=Enemy.minHeight),i>Enemy.maxSpeed&&(i=Enemy.maxSpeed),i<Enemy.minSpeed&&(i=Enemy.minSpeed),s>Enemy.maxSpeed&&(s=Enemy.maxSpeed),s<Enemy.minSpeed&&(s=Enemy.minSpeed),o>Enemy.maxAlpha&&(o=Enemy.maxAlpha),o<Enemy.minAlpha&&(o=Enemy.minAlpha),this.x=e,this.y=t,this.maxDx=i,this.maxDy=s,this.dx=0,this.dy=0,this.w=a,this.h=n,this.health=100,this.alpha=o,this.color=`rgba(255,${255*o},255,${o})`,this.side=0==this.x?-1:1}update(e=!0){this.x<player.x?this.dx=this.maxDx:this.dx=-this.maxDx,this.y<player.y?this.dy=this.maxDy:this.dy=-this.maxDy,super.update(e),this.health-=.8,(this.outOfBounds()||this.health<=0)&&this.remove()}get_features(){return[this.w,this.h,this.maxDx,this.maxDy,this.alpha,this.side]}get_normalized_features(){return[this.w/100,this.h/100,this.maxDx/100,this.maxDy/100]}collide(e){e instanceof Bullet&&(e.sender.health+=e.sender.health<90?10:0,e.remove(),this.health-=100)}remove(){enemies.splice(enemies.indexOf(this),1),remove(this)}}Enemy.minSpeed=.1,Enemy.maxSpeed=2,Enemy.minAlpha=.2,Enemy.maxAlpha=1,Enemy.minWidth=3,Enemy.maxWidth=25,Enemy.minHeight=4,Enemy.maxHeight=25;class HealthBar extends GameObject{constructor(e,t,a,n,i){super(),this.x=e,this.y=t,this.total_w=a,this.w=a,this.h=n,this.player=i,this.dx=0,this.dy=0}update(){this.w=this.total_w*this.player.health/100,ctx.fillStyle=`rgb(${255-2.55*this.player.health}, ${2.55*this.player.health}, 0)`,super.update()}}window.addEventListener("keydown",e=>{switch(e.keyCode){case 37:player.set_action(LEFT);break;case 38:player.set_action(UP);break;case 39:player.set_action(RIGHT);break;case 40:player.set_action(DOWN);break;case 32:shooting||(player.shoot(),shooting=!0)}}),window.addEventListener("keyup",async e=>{switch(binding?bind(e.keyCode,prompt("Name of Model: ")):e.keyCode in keyBindings&&(curAgent==keyBindings[e.keyCode]?agentPlaying=!1:(await loadModel(keyBindings[e.keyCode]),agentPlaying=!0)),e.keyCode){case 32:shooting=!1;break;case 80:agentPlaying=!agentPlaying;break;case 88:(running=!running)&&animate();break;case 82:reset(!1);break;case 83:await saveModel(prompt("Name of Model: "));break;case 76:await loadModel(prompt("Name of Model: "));break;case 84:await train();break;case 67:clearStorage();break;case 66:binding=!0;break;case 27:clearBindings()}});const LEFT=0,RIGHT=1,UP=2,DOWN=3,INPUT_NODES=50,HIDDEN_LAYERS=[40,30,20],NUM_OUTPUT_CLASSES=4;let running=!0,agentPlaying=!1,binding=!1,curAgent="default",shooting=!1,player=new Player(95*Math.random(),95*Math.random(),5,5,{red:"0",green:"255",blue:"255"}),keyBindings=localStorage.keyBindings?JSON.parse(localStorage.keyBindings):{},score=parseFloat(localStorage.score)||0,numGames=parseInt(localStorage.numGames)||0,enemySpawn="false"!==params.enemies,counts=params.training?"true"!==params.training:"false"!==params.counts,aiControl=parseFloat(params.control)||.9;"0"===params.control&&(aiControl=0);let controlPeriod=Math.round(100*(1-aiControl)+1);params.model_name&&loadModel(params.model_name);let t=0;const maxEnemies=5;Bullet.defaultBullet=new Bullet(-1,-1,0,0,0,0),Enemy.defaultEnemy=new Enemy(-1,-1,0,0,0,0,0),Enemy.add=(e=>{enemies.length<maxEnemies?(enemies.push(e),add(e)):delete e}),Enemy.get=(e=>enemies[e]||Enemy.defaultEnemy);let pHealthBar=new HealthBar(2,2,30,5,player),gameObjects=[player,pHealthBar],enemies=[],hitFeatures=localStorage.hitFeatures?JSON.parse(localStorage.hitFeatures):[[5,5,.8,.8,.8,0]],i=0,numGenerating=0,model=create_model(),shootingModel=create_shooting_model(),xs=[],ys=[],shootingYs=[];function remove(e){gameObjects.splice(gameObjects.indexOf(e),1),gameObjects.indexOf(e)<i&&i--,delete e}function add(e){gameObjects.push(e)}function get_state(){let e=[player.x/100,player.y/100,player.dx/100,player.dy/100,player.health/100];for(let t=0;t<maxEnemies;t++){let a=Enemy.get(t);e.push(a.x/100,a.y/100,a.dx/100,a.dy/100,a.health/100);let n=a.get_normalized_features();e=e.concat(n)}return e}function create_model(){const e=tf.sequential();e.add(tf.layers.dense({inputDim:INPUT_NODES,units:INPUT_NODES,kernelInitializer:"varianceScaling",activation:"tanh"}));for(let t of HIDDEN_LAYERS)e.add(tf.layers.dense({units:t,kernelInitializer:"varianceScaling",activation:"relu"}));e.add(tf.layers.dense({units:NUM_OUTPUT_CLASSES,kernelInitializer:"varianceScaling",activation:"softmax"}));const t=tf.train.adam();return e.compile({optimizer:t,loss:"categoricalCrossentropy",metrics:["accuracy"]}),e}function create_shooting_model(){const e=tf.sequential();e.add(tf.layers.dense({inputDim:INPUT_NODES,units:INPUT_NODES,kernelInitializer:"varianceScaling",activation:"tanh"}));for(let t of HIDDEN_LAYERS)e.add(tf.layers.dense({units:t,kernelInitializer:"varianceScaling",activation:"tanh"}));e.add(tf.layers.dense({units:1,kernelInitializer:"varianceScaling",activation:"sigmoid"}));const t=tf.train.adam();return e.compile({optimizer:t,loss:"meanSquaredError",metrics:["accuracy"]}),e}function create_multiplier(){let e=hitFeatures.length,t=[],a=[],n=0;for(let a=0;a<e;a++){let e=Math.pow(.8,a);t.push(e),n+=e}for(let i=0;i<e;i++)a.push(t[i]/n);return tf.tensor([a])}function clearStorage(){reset(),score=0,numGames=0,hitFeatures=[[5,5,.8,.8,.8,0]],localStorage.score=0,localStorage.numGames=0,localStorage.hitFeatures=JSON.stringify(hitFeatures)}function bind(e,t){keyBindings[e]=t,localStorage.keyBindings=JSON.stringify(keyBindings),binding=!1}function clearBindings(){keyBindings={},localStorage.keyBindings=""}function randGauss(){let e=0,t=0;for(;0===e;)e=Math.random();for(;0===t;)t=Math.random();return Math.sqrt(-2*Math.log(e))*Math.cos(2*Math.PI*t)}async function train(e=8){console.log(""),console.log("Training . . ."),console.log(""),console.log("Preparing Data . . .");const t=tf.data.array(xs),a=tf.data.array(ys),n=tf.data.array(shootingYs),i=tf.data.zip({xs:t,ys:a}).batch(4).shuffle(4),s=tf.data.zip({xs:t,ys:n}).batch(4).shuffle(4);console.log("Done Preparing Data"),console.log(""),console.log("Training Main Model . . .");const o=await model.fitDataset(i,{epochs:e,callbacks:{onEpochEnd:(e,t)=>console.log("Epoch:",e,"\n\tloss:",t.loss,"\n\taccuracy:",t.acc)}});console.log("history: ",o),console.log("Done Training Main Model"),console.log(""),console.log("Training Shooting Model . . .");const l=await shootingModel.fitDataset(s,{epochs:e,callbacks:{onEpochEnd:(e,t)=>console.log("Epoch:",e,"\n\tloss:",t.loss,"\n\taccuracy:",t.acc)}});console.log("history: ",l),console.log("Done Training Main Model"),console.log(""),console.log("Removing Old Data . . ."),xs=[],ys=[],shootingYs=[],console.log("Done Removing Old Data"),console.log(""),console.log("Done Training"),console.log(""),alert("Done Training!")}async function saveModel(e){console.log("Saving Model . . ."),curAgent=e,await model.save(`localstorage://${e}`),await shootingModel.save(`localstorage://${e}-shooting`),console.log("Done Saving Model"),console.log("")}async function loadModel(e){console.log("Loading Model . . ."),curAgent=e,model=await tf.loadLayersModel(`localstorage://${e}`),shootingModel=await tf.loadLayersModel(`localstorage://${e}-shooting`);const t=tf.train.adam();model.compile({optimizer:t,loss:"categoricalCrossentropy",metrics:["accuracy"]});const a=tf.train.adam();shootingModel.compile({optimizer:a,loss:"meanSquaredError",metrics:["accuracy"]}),console.log("Done Loading Model"),console.log("")}function reset(e=!0){enemySpawn&&e&&(score=(score*numGames+t)/++numGames),localStorage.score=score,localStorage.numGames=numGames,t=0;for(let e of gameObjects)e.remove();player=new Player(95*Math.random(),95*Math.random(),5,5,{red:"0",green:"255",blue:"255"}),numGenerating=0,pHealthBar=new HealthBar(2,2,30,5,player),gameObjects=[player,pHealthBar]}function animate(){if(running&&requestAnimationFrame(animate),ctx.clearRect(0,0,c.width,c.height),-1!=player.action&&(t++,xs.push(get_state()),ys.push(Array.from(tf.oneHot(player.action,NUM_OUTPUT_CLASSES).dataSync())),shootingYs.push(shooting?[1]:[0]),t%150==0&&enemySpawn)){numGenerating+=.2;let[e,t,a,n,i]=tf.matMul(create_multiplier(),tf.tensor(hitFeatures)).dataSync();for(let s=0;s<numGenerating;s++){const s=new Enemy(Math.random()>.5?0:100-e,100*Math.random(),e,t,a,n,i);Enemy.add(s)}}if(agentPlaying&&t%controlPeriod==0){let e=get_state(),t=tf.tensor([e]);e[0]<0?player.set_action(RIGHT):e[0]>.95?player.set_action(LEFT):e[1]<0?player.set_action(DOWN):e[1]>.95?player.set_action(UP):player.set_action(tf.argMax(model.predict(t),1).dataSync()[0]),shootingModel.predict(t).dataSync()[0]>.6&&player.shoot(),enemySpawn&&counts&&(score+=.01,localStorage.score=score)}for(i=0;i<gameObjects.length;i++){const e=gameObjects[i];e.update();for(let t=i+1;t<gameObjects.length;t++){const a=gameObjects[t];e.x+e.w>=a.x&&e.x<=a.x+a.w&&e.y+e.h>=a.y&&e.y<=a.y+a.h&&(e.collide(a),a.collide(e))}}localStorage.hitFeatures=JSON.stringify(hitFeatures),ctx.fillStyle="white",ctx.font="20px Courier New";let e="Score: "+Math.round(1e3*score)/1e3;ctx.fillText(e,c.width-14*e.length,30),player.health<=0&&reset(counts)}animate();